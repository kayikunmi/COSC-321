OpenShadingLanguage 1.00
# Compiled by oslc 1.11.0@OPROJECT_VERSION_RELEASE_TYPE@
# options: 
surface kBump
param	float	Ka	1		%read{2147483647,-1} %write{2147483647,-1}
param	float	Kd	1		%read{2147483647,-1} %write{2147483647,-1}
param	float	frequency	0.25		%read{1,9} %write{2147483647,-1} %derivs
param	color	Cout	1 0 1		%read{2147483647,-1} %write{2147483647,-1}
oparam	normal	N1	0 1 0		%read{2147483647,-1} %write{19,19}
global	point	P	%read{17,17} %write{2147483647,-1} %derivs
global	normal	N	%read{15,15} %write{2147483647,-1} %derivs
global	float	v	%read{1,4} %write{2147483647,-1} %derivs
local	float	smod	%read{7,10} %write{4,4} %derivs
local	point	newP	%read{18,18} %write{17,17} %derivs
local	float	change	%read{14,14} %write{13,13} %derivs
const	string	$const1	"mod"		%read{0,0} %write{2147483647,-1}
temp	float	$tmp1	%read{3,3} %write{2,2} %derivs
temp	float	$tmp2	%read{2,2} %write{1,1} %derivs
temp	float	$tmp3	%read{4,4} %write{3,3} %derivs
temp	float	$tmp4	%read{12,12} %write{7,7} %derivs
const	float	$const2	0.400000006		%read{5,5} %write{2147483647,-1}
temp	float	$tmp5	%read{7,7} %write{5,5} %derivs
const	float	$const3	0.600000024		%read{6,6} %write{2147483647,-1}
temp	float	$tmp6	%read{7,7} %write{6,6} %derivs
temp	float	$tmp7	%read{12,12} %write{11,11} %derivs
const	float	$const4	0		%read{11,11} %write{2147483647,-1}
const	float	$const5	0.200000003		%read{8,8} %write{2147483647,-1}
temp	float	$tmp8	%read{11,11} %write{8,8} %derivs
const	float	$const6	0.899999976		%read{9,9} %write{2147483647,-1}
temp	float	$tmp9	%read{10,10} %write{9,9} %derivs
temp	float	$tmp10	%read{11,11} %write{10,10} %derivs
temp	float	$tmp11	%read{13,13} %write{12,12} %derivs
const	float	$const8	1		%read{13,13} %write{2147483647,-1}
const	float	$const9	2.20000005		%read{14,14} %write{2147483647,-1}
temp	float	$tmp12	%read{16,16} %write{14,14} %derivs
temp	normal	$tmp13	%read{16,16} %write{15,15} %derivs
temp	normal	$tmp14	%read{17,17} %write{16,16} %derivs
temp	vector	$tmp15	%read{19,19} %write{18,18}
code ___main___
# KSea.osl:10
#     smod = mod (v, frequency) ;
	functioncall	$const1 5 	%filename{"KSea.osl"} %line{10} %argrw{"r"}
# /Applications/Pixar/RenderManProServer-24.4/lib/osl/include/stdosl.h:154
# float  mod (float  a, float  b) { return a - b*floor(a/b); }
	div		$tmp2 v frequency 	%filename{"/Applications/Pixar/RenderManProServer-24.4/lib/osl/include/stdosl.h"} %line{154} %argrw{"wrr"}
	floor		$tmp1 $tmp2 	%argrw{"wr"}
	mul		$tmp3 frequency $tmp1 	%argrw{"wrr"}
	sub		smod v $tmp3 	%argrw{"wrr"}
# KSea.osl:15
#     change = smoothstep (0.4* frequency, 0.6*frequency, smod) +
	mul		$tmp5 $const2 frequency 	%filename{"KSea.osl"} %line{15} %argrw{"wrr"}
	mul		$tmp6 $const3 frequency 	%argrw{"wrr"}
	smoothstep	$tmp4 $tmp5 $tmp6 smod 	%argrw{"wrrr"}
# KSea.osl:16
#     smoothstep(0.0, 0.2* frequency, 0.9* frequency-smod) - 1;
	mul		$tmp8 $const5 frequency 	%line{16} %argrw{"wrr"}
	mul		$tmp9 $const6 frequency 	%argrw{"wrr"}
	sub		$tmp10 $tmp9 smod 	%argrw{"wrr"}
	smoothstep	$tmp7 $const4 $tmp8 $tmp10 	%argrw{"wrrr"}
# KSea.osl:15
#     change = smoothstep (0.4* frequency, 0.6*frequency, smod) +
	add		$tmp11 $tmp4 $tmp7 	%line{15} %argrw{"wrr"}
# KSea.osl:16
#     smoothstep(0.0, 0.2* frequency, 0.9* frequency-smod) - 1;
	sub		change $tmp11 $const8 	%line{16} %argrw{"wrr"}
# KSea.osl:17
#     newP = 2.2 * change *normalize (N) +P;
	mul		$tmp12 $const9 change 	%line{17} %argrw{"wrr"}
	normalize	$tmp13 N 	%argrw{"wr"}
	mul		$tmp14 $tmp12 $tmp13 	%argrw{"wrr"}
	add		newP $tmp14 P 	%argrw{"wrr"}
# KSea.osl:18
#     N1 = normalize (calculatenormal (newP)) ;
	calculatenormal	$tmp15 newP 	%line{18} %argrw{"wr"} %argderivs{1}
	normalize	N1 $tmp15 	%argrw{"wr"}
	end
