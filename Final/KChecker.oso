OpenShadingLanguage 1.00
# Compiled by oslc 1.11.0@OPROJECT_VERSION_RELEASE_TYPE@
# options: 
shader KChecker
param	float	width	0.100000001		%read{1,24} %write{2147483647,-1}
oparam	color	Cout	0.5 0.5 0.5		%read{2147483647,-1} %write{31,32}
global	float	u	%read{1,4} %write{2147483647,-1}
global	float	v	%read{6,9} %write{2147483647,-1}
local	float	up	%read{11,21} %write{4,4}
local	float	vp	%read{15,25} %write{9,9}
const	string	$const1	"mod"		%read{0,5} %write{2147483647,-1}
temp	float	$tmp1	%read{3,3} %write{2,2}
temp	float	$tmp2	%read{2,2} %write{1,1}
temp	float	$tmp3	%read{4,4} %write{3,3}
temp	float	$tmp4	%read{8,8} %write{7,7}
temp	float	$tmp5	%read{7,7} %write{6,6}
temp	float	$tmp6	%read{9,9} %write{8,8}
const	float	$const2	2		%read{10,24} %write{2147483647,-1}
temp	float	$tmp7	%read{11,11} %write{10,10}
temp	int	$tmp8	%read{12,12} %write{11,11}
temp	int	$tmp9	%read{13,18} %write{12,17}
const	int	$const3	0		%read{12,28} %write{2147483647,-1}
temp	float	$tmp10	%read{15,15} %write{14,14}
temp	int	$tmp11	%read{16,16} %write{15,15}
temp	int	$tmp12	%read{17,17} %write{16,16}
temp	int	$tmp13	%read{19,30} %write{18,29}
temp	float	$tmp14	%read{21,21} %write{20,20}
temp	int	$tmp15	%read{22,22} %write{21,21}
temp	int	$tmp16	%read{23,28} %write{22,27}
temp	float	$tmp17	%read{25,25} %write{24,24}
temp	int	$tmp18	%read{26,26} %write{25,25}
temp	int	$tmp19	%read{27,27} %write{26,26}
temp	int	$tmp20	%read{29,29} %write{28,28}
const	color	$const4	0.100000001 0.200000003 0.400000006		%read{31,31} %write{2147483647,-1}
const	color	$const5	0.200000003 0.100000001 0		%read{32,32} %write{2147483647,-1}
code ___main___
# KChecker.osl:4
#     float up = mod(u,width);
	functioncall	$const1 5 	%filename{"KChecker.osl"} %line{4} %argrw{"r"}
# /Applications/Pixar/RenderManProServer-24.4/lib/osl/include/stdosl.h:154
# float  mod (float  a, float  b) { return a - b*floor(a/b); }
	div		$tmp2 u width 	%filename{"/Applications/Pixar/RenderManProServer-24.4/lib/osl/include/stdosl.h"} %line{154} %argrw{"wrr"}
	floor		$tmp1 $tmp2 	%argrw{"wr"}
	mul		$tmp3 width $tmp1 	%argrw{"wrr"}
	sub		up u $tmp3 	%argrw{"wrr"}
# KChecker.osl:5
#     float vp = mod(v,width);
	functioncall	$const1 10 	%filename{"KChecker.osl"} %line{5} %argrw{"r"}
# /Applications/Pixar/RenderManProServer-24.4/lib/osl/include/stdosl.h:154
# float  mod (float  a, float  b) { return a - b*floor(a/b); }
	div		$tmp5 v width 	%filename{"/Applications/Pixar/RenderManProServer-24.4/lib/osl/include/stdosl.h"} %line{154} %argrw{"wrr"}
	floor		$tmp4 $tmp5 	%argrw{"wr"}
	mul		$tmp6 width $tmp4 	%argrw{"wrr"}
	sub		vp v $tmp6 	%argrw{"wrr"}
# KChecker.osl:6
#     if (((up < width/2.0) && (vp < width/2.0)) || ((up >= width/2.0) && (vp >= width/2.0)))
	div		$tmp7 width $const2 	%filename{"KChecker.osl"} %line{6} %argrw{"wrr"}
	lt		$tmp8 up $tmp7 	%argrw{"wrr"}
	neq		$tmp9 $tmp8 $const3 	%argrw{"wrr"}
	if		$tmp9 18 18 	%argrw{"r"}
	div		$tmp10 width $const2 	%argrw{"wrr"}
	lt		$tmp11 vp $tmp10 	%argrw{"wrr"}
	neq		$tmp12 $tmp11 $const3 	%argrw{"wrr"}
	assign		$tmp9 $tmp12 	%argrw{"wr"}
	neq		$tmp13 $tmp9 $const3 	%argrw{"wrr"}
	if		$tmp13 20 30 	%argrw{"r"}
	div		$tmp14 width $const2 	%argrw{"wrr"}
	ge		$tmp15 up $tmp14 	%argrw{"wrr"}
	neq		$tmp16 $tmp15 $const3 	%argrw{"wrr"}
	if		$tmp16 28 28 	%argrw{"r"}
	div		$tmp17 width $const2 	%argrw{"wrr"}
	ge		$tmp18 vp $tmp17 	%argrw{"wrr"}
	neq		$tmp19 $tmp18 $const3 	%argrw{"wrr"}
	assign		$tmp16 $tmp19 	%argrw{"wr"}
	neq		$tmp20 $tmp16 $const3 	%argrw{"wrr"}
	assign		$tmp13 $tmp20 	%argrw{"wr"}
	if		$tmp13 32 33 	%argrw{"r"}
# KChecker.osl:7
#     Cout = color (0.1, 0.2, 0.4);
	assign		Cout $const4 	%line{7} %argrw{"wr"}
# KChecker.osl:9
#     Cout = color (0.2, 0.1, 0.0);
	assign		Cout $const5 	%line{9} %argrw{"wr"}
	end
