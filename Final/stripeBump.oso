OpenShadingLanguage 1.00
# Compiled by oslc 1.11.0@OPROJECT_VERSION_RELEASE_TYPE@
# options: 
surface stripeBump
param	float	Ka	1		%read{2147483647,-1} %write{2147483647,-1}
param	float	Kd	1		%read{2147483647,-1} %write{2147483647,-1}
param	float	frequency	0.25		%read{2,10} %write{2147483647,-1} %derivs
param	color	blackcolor	0 1 1		%read{2147483647,-1} %write{0,0} %initexpr
oparam	normal	N1	0 0 1		%read{2147483647,-1} %write{20,20}
global	point	P	%read{18,18} %write{2147483647,-1} %derivs
global	normal	N	%read{16,16} %write{2147483647,-1} %derivs
global	float	v	%read{2,5} %write{2147483647,-1} %derivs
local	float	smod	%read{8,11} %write{5,5} %derivs
local	point	newP	%read{19,19} %write{18,18} %derivs
local	float	change	%read{15,15} %write{14,14} %derivs
const	string	$const1	"rgb"		%read{0,0} %write{2147483647,-1}
const	float	$const3	0		%read{0,12} %write{2147483647,-1}
const	float	$const5	1		%read{0,14} %write{2147483647,-1}
const	string	$const6	"mod"		%read{1,1} %write{2147483647,-1}
temp	float	$tmp1	%read{4,4} %write{3,3} %derivs
temp	float	$tmp2	%read{3,3} %write{2,2} %derivs
temp	float	$tmp3	%read{5,5} %write{4,4} %derivs
temp	float	$tmp4	%read{13,13} %write{8,8} %derivs
const	float	$const7	0.400000006		%read{6,6} %write{2147483647,-1}
temp	float	$tmp5	%read{8,8} %write{6,6} %derivs
const	float	$const8	0.600000024		%read{7,7} %write{2147483647,-1}
temp	float	$tmp6	%read{8,8} %write{7,7} %derivs
temp	float	$tmp7	%read{13,13} %write{12,12} %derivs
const	float	$const9	0.200000003		%read{9,9} %write{2147483647,-1}
temp	float	$tmp8	%read{12,12} %write{9,9} %derivs
const	float	$const10	0.899999976		%read{10,10} %write{2147483647,-1}
temp	float	$tmp9	%read{11,11} %write{10,10} %derivs
temp	float	$tmp10	%read{12,12} %write{11,11} %derivs
temp	float	$tmp11	%read{14,14} %write{13,13} %derivs
const	float	$const11	2.20000005		%read{15,15} %write{2147483647,-1}
temp	float	$tmp12	%read{17,17} %write{15,15} %derivs
temp	normal	$tmp13	%read{17,17} %write{16,16} %derivs
temp	normal	$tmp14	%read{18,18} %write{17,17} %derivs
temp	vector	$tmp15	%read{20,20} %write{19,19}
code blackcolor
# KBump.osl:3
# color blackcolor = color ("rgb", 0, 1,1),
	color		blackcolor $const1 $const3 $const5 $const5 	%filename{"KBump.osl"} %line{3} %argrw{"wrrrr"}
code ___main___
# KBump.osl:9
#     smod = mod (v, frequency) ;
	functioncall	$const6 6 	%filename{"KBump.osl"} %line{9} %argrw{"r"}
# /Applications/Pixar/RenderManProServer-24.4/lib/osl/include/stdosl.h:154
# float  mod (float  a, float  b) { return a - b*floor(a/b); }
	div		$tmp2 v frequency 	%filename{"/Applications/Pixar/RenderManProServer-24.4/lib/osl/include/stdosl.h"} %line{154} %argrw{"wrr"}
	floor		$tmp1 $tmp2 	%argrw{"wr"}
	mul		$tmp3 frequency $tmp1 	%argrw{"wrr"}
	sub		smod v $tmp3 	%argrw{"wrr"}
# KBump.osl:14
#     change = smoothstep (0.4* frequency, 0.6*frequency, smod) +
	mul		$tmp5 $const7 frequency 	%filename{"KBump.osl"} %line{14} %argrw{"wrr"}
	mul		$tmp6 $const8 frequency 	%argrw{"wrr"}
	smoothstep	$tmp4 $tmp5 $tmp6 smod 	%argrw{"wrrr"}
# KBump.osl:15
#     smoothstep(0.0, 0.2* frequency, 0.9* frequency-smod) - 1;
	mul		$tmp8 $const9 frequency 	%line{15} %argrw{"wrr"}
	mul		$tmp9 $const10 frequency 	%argrw{"wrr"}
	sub		$tmp10 $tmp9 smod 	%argrw{"wrr"}
	smoothstep	$tmp7 $const3 $tmp8 $tmp10 	%argrw{"wrrr"}
# KBump.osl:14
#     change = smoothstep (0.4* frequency, 0.6*frequency, smod) +
	add		$tmp11 $tmp4 $tmp7 	%line{14} %argrw{"wrr"}
# KBump.osl:15
#     smoothstep(0.0, 0.2* frequency, 0.9* frequency-smod) - 1;
	sub		change $tmp11 $const5 	%line{15} %argrw{"wrr"}
# KBump.osl:16
#     newP = 2.2 * change *normalize (N) +P;
	mul		$tmp12 $const11 change 	%line{16} %argrw{"wrr"}
	normalize	$tmp13 N 	%argrw{"wr"}
	mul		$tmp14 $tmp12 $tmp13 	%argrw{"wrr"}
	add		newP $tmp14 P 	%argrw{"wrr"}
# KBump.osl:17
#     N1 = normalize (calculatenormal (newP)) ;
	calculatenormal	$tmp15 newP 	%line{17} %argrw{"wr"} %argderivs{1}
	normalize	N1 $tmp15 	%argrw{"wr"}
	end
