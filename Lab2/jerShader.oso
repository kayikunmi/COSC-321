OpenShadingLanguage 1.00
# Compiled by oslc 1.11.0@OPROJECT_VERSION_RELEASE_TYPE@
# options: 
surface jerShader
param	float	Ka	1		%read{2147483647,-1} %write{2147483647,-1}
param	float	Kd	1		%read{2147483647,-1} %write{2147483647,-1}
param	float	frequency	1		%read{5,25} %write{2147483647,-1}
param	color	darkcolor	0 1 0		%read{24,28} %write{2147483647,-1}
param	color	Cs	0 0 1		%read{23,29} %write{2147483647,-1}
oparam	color	Cout	1 0 0		%read{2147483647,-1} %write{23,29}
global	point	P	%read{1,1} %write{2147483647,-1}
local	float	xp	%read{7,10} %write{2,2}
local	float	yp	%read{13,16} %write{3,3}
local	float	zp	%read{2147483647,-1} %write{4,4}
local	float	smod	%read{18,18} %write{10,10}
local	float	tmod	%read{21,26} %write{16,16}
local	point	P1	%read{2,4} %write{1,1}
const	string	$const1	"object"		%read{1,1} %write{2147483647,-1}
const	string	$const2	"transform"		%read{0,0} %write{2147483647,-1}
const	string	$const3	"common"		%read{1,1} %write{2147483647,-1}
const	int	$const4	0		%read{2,2} %write{2147483647,-1}
const	int	$const5	1		%read{3,3} %write{2147483647,-1}
const	int	$const6	2		%read{4,4} %write{2147483647,-1}
temp	float	$tmp1	%read{7,9} %write{5,5}
const	float	$const7	1		%read{5,11} %write{2147483647,-1}
const	string	$const8	"mod"		%read{6,12} %write{2147483647,-1}
temp	float	$tmp2	%read{9,9} %write{8,8}
temp	float	$tmp3	%read{8,8} %write{7,7}
temp	float	$tmp4	%read{10,10} %write{9,9}
temp	float	$tmp5	%read{13,15} %write{11,11}
temp	float	$tmp6	%read{15,15} %write{14,14}
temp	float	$tmp7	%read{14,14} %write{13,13}
temp	float	$tmp8	%read{16,16} %write{15,15}
const	float	$const9	0.5		%read{17,25} %write{2147483647,-1}
temp	float	$tmp9	%read{18,18} %write{17,17}
temp	int	$tmp10	%read{19,19} %write{18,18}
temp	float	$tmp11	%read{21,21} %write{20,20}
temp	int	$tmp12	%read{22,22} %write{21,21}
temp	float	$tmp13	%read{26,26} %write{25,25}
temp	int	$tmp14	%read{27,27} %write{26,26}
code ___main___
# labShader.osl:19
#   point P1 = transform("object",P);
	functioncall	$const2 2 	%filename{"labShader.osl"} %line{19} %argrw{"r"}
# /Applications/Pixar/RenderManProServer-24.4/lib/osl/include/stdosl.h:285
# point  transform (string to, point p)  { return transform("common",to,p); }
	transform	P1 $const3 $const1 P 	%filename{"/Applications/Pixar/RenderManProServer-24.4/lib/osl/include/stdosl.h"} %line{285} %argrw{"wrrr"}
# labShader.osl:21
#   xp = P1[0];
	compref		xp P1 $const4 	%filename{"labShader.osl"} %line{21} %argrw{"wrr"}
# labShader.osl:22
#   yp = P1[1];
	compref		yp P1 $const5 	%line{22} %argrw{"wrr"}
# labShader.osl:23
#   zp = P1[2];
	compref		zp P1 $const6 	%line{23} %argrw{"wrr"}
# labShader.osl:25
#   smod = mod(xp,1*frequency);
	mul		$tmp1 $const7 frequency 	%line{25} %argrw{"wrr"}
	functioncall	$const8 11 	%argrw{"r"}
# /Applications/Pixar/RenderManProServer-24.4/lib/osl/include/stdosl.h:154
# float  mod (float  a, float  b) { return a - b*floor(a/b); }
	div		$tmp3 xp $tmp1 	%filename{"/Applications/Pixar/RenderManProServer-24.4/lib/osl/include/stdosl.h"} %line{154} %argrw{"wrr"}
	floor		$tmp2 $tmp3 	%argrw{"wr"}
	mul		$tmp4 $tmp1 $tmp2 	%argrw{"wrr"}
	sub		smod xp $tmp4 	%argrw{"wrr"}
# labShader.osl:26
#   tmod = mod(yp,1*frequency);
	mul		$tmp5 $const7 frequency 	%filename{"labShader.osl"} %line{26} %argrw{"wrr"}
	functioncall	$const8 17 	%argrw{"r"}
# /Applications/Pixar/RenderManProServer-24.4/lib/osl/include/stdosl.h:154
# float  mod (float  a, float  b) { return a - b*floor(a/b); }
	div		$tmp7 yp $tmp5 	%filename{"/Applications/Pixar/RenderManProServer-24.4/lib/osl/include/stdosl.h"} %line{154} %argrw{"wrr"}
	floor		$tmp6 $tmp7 	%argrw{"wr"}
	mul		$tmp8 $tmp5 $tmp6 	%argrw{"wrr"}
	sub		tmod yp $tmp8 	%argrw{"wrr"}
# labShader.osl:28
#   if (smod < 0.5*frequency) {
	mul		$tmp9 $const9 frequency 	%filename{"labShader.osl"} %line{28} %argrw{"wrr"}
	lt		$tmp10 smod $tmp9 	%argrw{"wrr"}
	if		$tmp10 25 30 	%argrw{"r"}
# labShader.osl:29
#     if (tmod < 0.5*frequency) 
	mul		$tmp11 $const9 frequency 	%line{29} %argrw{"wrr"}
	lt		$tmp12 tmod $tmp11 	%argrw{"wrr"}
	if		$tmp12 24 25 	%argrw{"r"}
# labShader.osl:30
#       Cout = Cs;
	assign		Cout Cs 	%line{30} %argrw{"wr"}
# labShader.osl:32
#       Cout = darkcolor;
	assign		Cout darkcolor 	%line{32} %argrw{"wr"}
# labShader.osl:35
#     if (tmod < 0.5*frequency)
	mul		$tmp13 $const9 frequency 	%line{35} %argrw{"wrr"}
	lt		$tmp14 tmod $tmp13 	%argrw{"wrr"}
	if		$tmp14 29 30 	%argrw{"r"}
# labShader.osl:36
#       Cout = darkcolor;
	assign		Cout darkcolor 	%line{36} %argrw{"wr"}
# labShader.osl:38
#       Cout = Cs;
	assign		Cout Cs 	%line{38} %argrw{"wr"}
	end
